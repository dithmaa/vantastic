import React, { useEffect, useRef, useState } from "react";
import header2 from "../../assets/img/header2.jpg";
import calendarIcon from "../../assets/img/Calendar.svg";
import backArrow from "../../assets/img/back-arrow.png";
import { NavLink } from "react-router-dom";
import Preloader from "../../components/Preloader/Preloader";

import { useParams } from "react-router-dom";
import Sucess from "../success/sucess";

function Form({ userID, userName, refID, products }) {
  const { id } = useParams();
  console.log(id);
  const [selectedDate, setSelectedDate] = useState("");
  const [phoneVal, setPhoneVal] = useState("");
  const [adultVal, setAdultVal] = useState("");
  const [childVal, setChildVal] = useState("");

  // –ü–æ–ª—è –≤–≤–æ–¥–∞

  const handlePhoneVal = (e) => {
    // –Ω–æ–º–µ—Ä
    const inputValue = e.target.value;
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–≤–æ–¥ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–º—É –≤—ã—Ä–∞–∂–µ–Ω–∏—é
    const regex = /^[+\d]*$/;
    if (regex.test(inputValue)) {
      setPhoneVal(inputValue);
    }
  };
  const handleAdultVal = (event) => {
    setAdultVal(event.target.value);
  };
  const handleChildVal = (event) => {
    setChildVal(event.target.value);
  };
  const handleDateChange = (event) => {
    // –¥–∞—Ç–∞
    setSelectedDate(event.target.value);
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã

  const handleSubmit = async (e) => {
    e.preventDefault();
    console.log("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ");

    const token = "7315532670:AAGQJhx5vLtsiAgnkKESTF7rWKdmuBqmyDw";
    const chatId = "-4208690097";
    const text = `üî• –ù–æ–≤—ã–π –ó–∞–∫–∞–∑ üî• - Telegram Bot \n ‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${phoneVal}\n ü§µ‚Äç‚ôÇÔ∏è–í–∑—Ä–æ—Å–ª—ã–µ: ${adultVal}\nüßí–î–µ—Ç–∏: ${childVal}\n üìÖ –ñ–µ–ª–∞–µ–º–∞—è –¥–∞—Ç–∞: ${selectedDate}\n üòé–ê–π–¥–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è: ${userID}\nüòéUsername –ø–æ–∫—É–ø–∞—Ç–µ–ª—è: ${userName}\n üë®‚Äçüíª–†–∞–±–æ—Ç–Ω–∏–∫: ${refID}.\n–≠–∫—Å–∫—É—Ä—Å–∏—è: ${
      products[id - 1].name
    }`;

    const url = `https://api.telegram.org/bot${token}/sendMessage`;

    try {
      const response = await fetch(url, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          chat_id: chatId,
          text: text,
        }),
      });

      if (response.ok) {
        console.log("Message sent successfully!");
        window.location.href = "/success";
      } else {
        console.log("Failed to send message.");
      }
    } catch (error) {
      console.error("Error sending message:", error);
      alert("Failed to send message.");
    }
  };

  useEffect(() => {
    const date = new Date();

    let day = date.getDate();
    let month = date.getMonth() + 1;
    let year = date.getFullYear();
    if (month < 10) {
      month = "0" + month;
    }
    if (day < 10) {
      day = "0" + day;
    }
    setSelectedDate(year + "-" + month + "-" + day);
  }, []);
  const [isPreloaderActive, setPreloaderActive] = useState(true);
  useEffect(() => {
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–≤–µ—Ä—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    window.scrollTo(0, 0);
    setTimeout(() => {
      setPreloaderActive(false);
    }, 900);
  }, []);

  return (
    <section className="card-page page-gap">
      <Preloader isActive={isPreloaderActive} />
      <NavLink to="/" className="back-btn">
        <img src={backArrow} alt="–ù–∞–∑–∞–¥" /> <span>–ù–∞–∑–∞–¥</span>
      </NavLink>
      <div className="card-page__image form-page__image">
        <img src={header2} alt="header2" />
      </div>
      <div className="container">
        <h3 className="form-title">–ò–º—è.</h3>
        <form className="form" action="#" onSubmit={handleSubmit}>
          <div className="form__item">
            <label className="form__title">–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</label>
            <input
              maxLength={13}
              value={phoneVal}
              type="tel"
              placeholder="+7 (...) -...-..-.."
              onChange={handlePhoneVal}
            />
          </div>
          <div className="form__item">
            <label className="form__title">–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫:</label>
            <div className="form__item-line flex">
              <input
                type="tel"
                onChange={handleAdultVal}
                maxLength={2}
                placeholder="–í–∑—Ä–æ—Å–ª—ã–µ"
                value={adultVal}
              />
              <input
                type="tel"
                maxLength={2}
                placeholder="–î–µ—Ç–∏"
                value={childVal}
                onChange={handleChildVal}
              />
            </div>
          </div>

          <label className="form__title">–ñ–µ–ª–∞–µ–º–∞—è –¥–∞—Ç–∞:</label>
          <div className="date-input-container" style={{ width: "100%" }}>
            <span className="calendar-icon" style={{ paddingTop: "1px" }}>
              <img src={calendarIcon} alt="Calendar Icon" />
            </span>

            <input
              style={{ width: "100%" }}
              type="date"
              id="date-input"
              className="real-date-input"
              value={selectedDate}
              min="2024-06-02"
              max="2028-12-31"
              onChange={handleDateChange}
            />
          </div>

          <button className="form__btn" type={"submit"}>
            –°–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π
          </button>
        </form>
      </div>
    </section>
  );
}

export default Form;
